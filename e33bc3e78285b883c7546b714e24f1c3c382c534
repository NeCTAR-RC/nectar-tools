{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c6010c09_2712a71a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-09T02:20:56Z",
      "side": 1,
      "message": "Sorry I couldn\u0027t stay to the end of the meeting yesterday. Here is my reasoning for using `--repair` to repair things as opposed to `-y`\n\nWith the expirer and provisioner etc. when you run it with no args it tells you what it will do and then you use -y and it does these things. With the audit scripts they work differently. With no args it will tell you what things are wrong and then if you want it to fix these things you use `--repair`. \n\nYeah consistency may be better here but I\u0027m not sure as --no-dry-run doesn\u0027t make sense and `--repair` is more explicit and better from a usability pov.\n\n",
      "revId": "e33bc3e78285b883c7546b714e24f1c3c382c534",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "280b7ddf_eca86100",
        "filename": "nectar_tools/audit/allocation/allocation.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-09T02:20:56Z",
      "side": 1,
      "message": "no need to pass LOG objects around as they are available directly, maybe there is something I\u0027m missing but it shouldn\u0027t be done this way. Makes writing the code harder too having all these bits everywhere. Let me know what you\u0027re trying to do and we should be able to come up with a better approach.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 17,
        "endChar": 41
      },
      "revId": "e33bc3e78285b883c7546b714e24f1c3c382c534",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6fd7961_fd80fe8c",
        "filename": "nectar_tools/audit/allocation/allocation.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000157
      },
      "writtenOn": "2021-07-13T00:31:58Z",
      "side": 1,
      "message": "It is important to use the correct logger because in many cases the logger name gives context that allows the message to make sense.  There are two ways to get the correct logger.  This way ... or some gnarly stuff that figures out the module for the caller of the \u0027repair\u0027 method and gets its \u0027LOG\u0027.  To me, this way is cleaner.\n\n(And what this code / pattern does is self evident, so I can\u0027t see how it is hard to read.)",
      "parentUuid": "280b7ddf_eca86100",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 17,
        "endChar": 41
      },
      "revId": "e33bc3e78285b883c7546b714e24f1c3c382c534",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8509661e_4727abac",
        "filename": "nectar_tools/audit/app_catalog/environment.py",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-09T02:20:56Z",
      "side": 1,
      "message": "I don\u0027t think this is really improving things, yes it\u0027s a bit more DRY but makes things more complicated, not sure if I like this or not as to me the left side is more readable",
      "range": {
        "startLine": 59,
        "startChar": 1,
        "endLine": 61,
        "endChar": 53
      },
      "revId": "e33bc3e78285b883c7546b714e24f1c3c382c534",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b79b6e6_4ca8f5e1",
        "filename": "nectar_tools/audit/app_catalog/environment.py",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000157
      },
      "writtenOn": "2021-07-13T00:31:58Z",
      "side": 1,
      "message": "It turns out that try_repair is currently only used in one or two places.  So passing a function that consumed / logged the exception itself, is probably a better idea.",
      "parentUuid": "8509661e_4727abac",
      "range": {
        "startLine": 59,
        "startChar": 1,
        "endLine": 61,
        "endChar": 53
      },
      "revId": "e33bc3e78285b883c7546b714e24f1c3c382c534",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "589f2863_84d3fa44",
        "filename": "nectar_tools/audit/app_catalog/environment.py",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000157
      },
      "writtenOn": "2021-07-13T01:03:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b79b6e6_4ca8f5e1",
      "range": {
        "startLine": 59,
        "startChar": 1,
        "endLine": 61,
        "endChar": 53
      },
      "revId": "e33bc3e78285b883c7546b714e24f1c3c382c534",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5"
    }
  ]
}